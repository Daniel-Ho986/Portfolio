---
import Icon from '../components/Icon.astro';

interface TechStack {
	path: string;
	alt: string;
	modeClasses: string[];
}

interface Props {
	title: string;
	description: string;
	image: string;
	code: string;
	site: string;
	techStack: TechStack[];
}

const { title, description, image, code, site, techStack } = Astro.props;
---

<div class="card">
	<div class="info">
		<div class="links">
			<a href={code}><button class="button"><Icon icon="github-logo" size="1.33em" /></button></a>
			<a href={site}><button class="button"><Icon icon="link" size="1.33em" /></button></a>
		</div>
		<span class="title">{title}</span>
		<span class="description">{description}</span>
		<div class="stack">
			{
				techStack.map(tech => (
					<img 
						src={`../../assets/stack-icons/${tech.path}`} 
						alt={tech.alt} 
						class={`tech ${tech.modeClasses.join(' ')}`} 
					/>
				))
			}
		</div>
	</div>
	<img src={image} alt={title} class="project-image" loading="lazy" decoding="async" /> 
</dvi>

<style>
	.card {
		position: relative;
		display: grid;
		grid-template: .5fr auto / auto;
		height: 25rem;
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
		border-radius: 0.75rem;
		overflow: hidden;
		box-shadow: var(--shadow-sm);
		text-decoration: none;
		font-family: var(--font-brand);
		font-size: var(--text-lg);
		font-weight: 500;
		transition: box-shadow var(--theme-transition);
	}

	.card:hover {
		box-shadow: var(--shadow-md);
	}

	.info {
		align-self: center;
		justify-self: center;
		display: flex;
		flex-direction: column;
		justify-content: space-evenly;
		width: 100%;
		height: 100%;
		padding-bottom: 1rem;
		background: var(--gray-999);
  		color: var(--gray-200);
  		border-radius: 0.375rem;
	}

	.links {
		padding: 0.5rem 1rem 0 0;
		display: flex;
		justify-content: flex-end;
		gap: 0.5rem;
	}

	button {
		display: flex;
		padding: 0.6rem;
		color: var(--accent-text-over);
		border: 1px solid var(--accent-regular);
		background-color: var(--accent-regular);
		border-radius: 50%;
		font-size: var(--text-md);
		line-height: 1.35;
		white-space: nowrap;
		cursor: pointer;
		transition: background-color: var(--theme-transition)
	}

	button:hover {
		background-color: var(--accent-light);
	}

	.title {
  		margin: -10px 0 0 0;
  		padding: 0 2rem 0 3rem;
  		font-size: var(--text-3xl);
	}

	.description {
		margin: -5px 0 10px 0;
		padding: 0 2rem 0 3rem;
		font-size: var(--text-sm);
		color: var(--gray-400);
	}

	.stack {
		padding: 0.5rem 2rem 0 3rem;
		display: flex;
		flex-direction: row;
		flex-wrap: wrap;
		justify-content: flex-start;
		gap: 1rem;
	}

	.tech {
		max-width: 30px;
  		width: 100%;      
		height: auto;     
	}

	:global(.theme-dark) .tech.light-mode-only {
		display: none;
	}

	:global(html:not(.theme-dark)) .tech.dark-mode-only {
		display: none;
	}

	.project-image {
		position: absolute;
		grid-area: 2 / 1 / 2 / 1;
		width: 100%;
		height: 100%;
		align-self: center;
		justify-self: center;
		object-fit: cover;
	}

	@media (min-width: 45em) {
		.card {
			grid-template: auto / .5fr auto;
			height: 22rem;
		}

		.info {
			padding-bottom: 3rem;
		}

		.links {
			margin-top: -20px;
			padding-left: 1rem;
			justify-content: flex-start;
		}

		button {
			padding: 0.7rem;
		}

		.title {
			margin: 0;
		}

		.description {
			margin-top: -10px;
		}

		.project-image {
			position: absolute;
			grid-area: 1 / 2 / 1 / 2;
			height: 70%;
			align-self: center;
			border-radius: 1rem 0 0 1rem;
		}
	}
</style>
